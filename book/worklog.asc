== Worklog

.20131204

我今天的主要工作内容如下：

1. 解决telnet连接后直接断开的问题。

error code显示125，可能是`tcp_connection`类或者存放数据的buffer在callback函数被调用时，已经被析构了。

解决方法有两种，一是手动new/delete；二是让`tcp_connection`类 继承`enable_shared_from_this`接口，在需要this指针的callback函数中，用`shared_from_this()`生成一个指向当前对象的`shared_ptr`，保证在有引用的情况下，对象始终存在。第二种在boost例子和网上讨论中比较常用。

目前用第二种方法解决了该问题。

2. 消除编译时的warning。
3. 实现server从socket读取数据，直到读出`0x03`时，调用callback函数处理读到的包。
4. buffer中的数据可能不止到`0x03`的位置，手动提取数据包自身的部分到一个char*。

遇到的问题如下：

1. 提取到char*（或者char[]）就意味着要在结构体内把它delete掉（或者任它自己在结构体执行完毕后被回收），这样就无法将处理数据包的逻辑写到另一个函数去，除非传参的时候不传指针或者引用，而传拷贝。每个包都复制很多遍的话，时间长了会产生很多内存碎片。

需要找一个方式，用`shared_ptr`来传递参数给数据包处理函数，让对象在没有引用之后自动析构。

明天的计划如下：

1. 解决上述问题
2. 数据包处理函数中，实现类型检查和重校验。


.20131203

我今天的主要工作内容如下：

1. `tcp_server`可以监听端口了
2. 用telnet连本机生成新连接时，`handle_accept()`成功调用

明天的计划如下：

1. 写`tcp_connection`中对连接的处理
2. 首先解决login包（报文类型`0x00`）的接收和发送


.20131202

我今天的主要工作内容如下：

1. 继续实现`tcp_server`和`tcp_connection`类
2. 解决namespace冲突
3. 将公用函数移到toolkit.[h|cpp]中

明天的计划如下：

1. 继续写`tcp_server`逻辑 


.20131130

我今天的主要工作内容如下：

1. 将我对数据库设计的需求改动整理成文，http://202.11.20.186/qingpei/skyeye-server/blob/master/doc/db_spec.asciidoc

明天的计划如下：

1. 继续实现`tcp_server`和`tcp_connection`类 


.20131129

我今天的主要工作内容如下：

1. 根据_显示屏无线监控系统_协议文档，确定`tcp_server`和`tcp_connection`
   类 的功能划分
2. 再读孙亚清的_SkyEye数据库结构_文档，标注我的 意见和新需求
3. 读37Signals关于如何开发项目的书_Getting Real_

明天的计划如下：

1. 将我对数据库设计的需求改动整理成文


.20131128

我今天的主要工作内容如下：

1. 写`skyeye_server`的CMakeList.txt。
  * 现在可以实现自动寻找MySQL C Connector以及Boost库的位置，添加对应的include path和lib path了。
  * 现在编译项目可以用常见的

[source,bash]
----
./configure
make
make install
----

明天的计划如下：

1. 写`tcp_server`类的成员


.20131127

我今天的主要工作内容如下：

1. 读孙亚清的Java通信代码
2. 学习CMake的使用（server可以不用Qt，server GUI可以另写，借助数据库显示server状态。用qmake作为buildtool的话，安装server必须先装一个很大的Qt SDK；而CMake的预编译版本在大多数linux发行版的软件库里都有。）
3. 整理此前写的全部文档

明天的计划如下：

1. 将server的buildtool换成CMake
2. 写tcp_server类的成员 


.20131126

我今天的主要工作内容如下：

1. 给已经写好的cpp文件加注释。
2. 生成代码文档。
3. 开启MariaDB的general query log，供孙亚清调试展示程序使用。
4. 生成孙亚清此前写的Java通信程序文档，结合文档与代码了解通信方法。

明天的计划如下：

1. 继续读孙亚清的Java通信程序代码，搞懂如何与远端设备通信。
2. 学习CMake的使用。 


.20131125

我今天的主要工作内容如下：

1. 把`tasks_todo`从vector改成map。这样添加和删除任务都用`task_id`作为key，写起来方便。
2. 读到的任务，根据类型，分别调用不同的handler处理。
3. handler返回处理结果后，将任务和结果写到`task_done`表，附上当前时间。将任务从`task_todo`表 删除。
4. 把之前用#define定义的常量改成const常量，以免类型不匹配。
5. 把所有常量定义放到namespace skyeye中。
6. 头文件加注释

遇到的问题如下：

1. 现在所有任务的handler都是dummy，光打印自己做什么，实际上什么都不做。因为涉及到数据库操作，需要先把数据库的表和字段确定下来。

明天的计划如下：

1. 参考展示代码和协议文档，研究如何与客户端通信。
2. 写`tcp_server`和`tcp_connection`类的成员。 


.20131123

我今天的主要工作内容如下：

1. 实现从数据库读取 `task_todo` 表并存放在一个任务队列vector中。

明天的计划如下：

1. 把任务队列中的项目逐一放到 `task_done` 表，并加上处理时间和默认结果。
2. 对于特定的任务，比如请求客户端连接，把任务转发给另一个函数处理。将来在该函数中用modem发短信。 


.20131122

1. 在202.11.20.186上搭建 NFS 服务器。搭建过程和 Windows 连接方法见文档 http://202.11.20.186/qingpei/skyeye-server/blob/master/doc/nfs-setup.md
2. 配合孙亚清，实现 C++ 程序用 Windows API 访问 NFS 共享。
3. 在qmake的项目文件中，调用系统命令`mysql_config`自动配置include path和lib path。
4. 继续实现 SkyEye-Server 中的 maria_db_operator 类。


遇到的问题有：

1. NFS 服务启动之后，本地可以访问，Windows 无法访问。

防火墙开启了 NFS 的端口。将防火墙完全关闭后可以访问，所以一定有端口没开放。用`rpcinfo -p`查看用到的全部端口，一一打开后连接成功。

2. Boost 库的 include path 和 lib path 仍然是事先写在项目文件中的，目前没有脚本来自动寻找它们的位置。


明天的计划如下：

1. 实现自动（定时）查询数据库中的一张表`tasks_todo` 是否有内容。
2. 将`tasks`中 的每一条记录显示后，放入`tasks_done`表。
3. 把2中的“显示”换成`tcp_server`的 函数调用，并获取返回值，再放入`task_done`表。 


.20131121

我今天的主要工作内容如下：

1. 参与讨论SkyEye的设计
2. 写SkyEye Server的一部分类定义。http://202.11.20.186/qingpei/skyeye- server/tree/master
3. 脱离Qt的Databas Driver，使用MariaDB自己的C connector。在Linux发行版 上，可以通过安装mariadb-devel包获得。

遇到的问题如下：

1. 用于数据库操作的类成员函数的参数列表需要根据数据库的字段定义来写。
2. 用于和客户端GUI互动的类成员函数参数需要我和孙亚清确定任务列表的必需属性。

明天的计划如下：

1. 思考服务器程序的结构，还需要哪些类，类之间如何交换数据。
2. 封装MariaDB的C API，实现读取状态操作。


.20131120

我今天的主要工作内容如下：

Qt Network，看StackOverflow上的讨论说Qt的性能在连接数多的时候，下降不 少。所以推荐 用boost.asio或者POCO库来做网络连接。

1. 看boost.asio文档的tutorial
2. 依照文档学习boost.asio的用法

写的代码在http://202.11.20.186/qingpei/learn-boost

明天的计划如下：

1. 看完boost.asio的tutorial
2. 了解怎样用boost.asio实现异步TCP通信
3. 尝试实现异步TCP Server 


.20131119

我今天的主要工作内容如下：

1. Server端支持与多个Client通信。
2. Qt的TCPServer会保持一个pendingConnections队列，可以用nextPendingConnection() 
调出下一个连接进行处理。

现在是一个TCPServer对象监听端口，每次有连接请求的时候，会发出signal，由预设的callback函数来处理请求。多 个client的连接请求可以从上面提到的队列中逐一拿到。

下一步我想把这个server放到新建的线程里去，不要跟GUI在一起，以免通信过程某个函数执行时间长了界面无响应。

明天的计划如下：

1. 把Server的通信功能放到单独的线程去做。将来如果并发连接很多的话，再实现动态分配线程处理请求。
2. 保持连接的时候Server和Client互相通信。


.20131118

我今天主要工作内容如下：

1. 在周六连接上SQL数据库的基础上，把数据库和里面的表用TreeView显示在GUI上。
2. 在TreeView中双击表，可以将表的内容用TableView显示出来。
3. 输入SQL query之后，可以将执行结果用TableView显示。以上1-3的代码已经提交到 http://202.11.20.186/skyeye/qt-sql-example
4. 查阅Qt文档的QNetwork部分。
5. 实验QT中TCP Server和TCP Socket的用法。现在Server可以向Client发送String。

遇到的问题如下：

1. 服务器的IP地址之前是自动分配的，我改成手动设置成202.11.20.186来固定，这可能会产生冲突。我的Windows机器之前的IP是 202.11.20.244，现在已经变成202.11.20.150了，此前邮件里发送的文档链接就失效了，每次分配到新的地址都需要改一次。

明天的计划如下：

1. Server端实现连接池，管理多个客户端的TCP Socket。
2. 测试C/S双向通信。


.20131116

我今天主要工作内容如下：

1. 编译Qt的MySQL driver 
2. 写一个Qt程序连接MySQL数据库 项目在 http://202.11.20.186/skyeye/qt-sql-example 
3. 将Qt编程遇到的问题和解决办法写在 http://202.11.20.244/qt-programming.htm

现在程序能够成功连接MySQL数据库，并显示数据库中的table名字列表。

遇到的问题和明天的计划如下：

1. 连接数据库之后，在GUI上用treeview显示数据库的表结构，并用tableview显示表内容。
2. 执行SQL query并把结果用tableview显示。


.20131115

我今天主要工作内容如下：

1. 安装Qt 
2. Qt自带了一个IDE叫Qt Creator，有Design界面方便设计应用程序的窗口。 
3. Qt默认使用qmake，比GNU Make方便。所以昨天提到的Eclipse+autotools plugin的方案可以用Qt Creator+qmake取代。 
4. 参照文档写了个简单的Qt程序。在 http://202.11.20.186/qingpei/qt-widget

遇到的问题和明天的计划如下：

1. Qt Creator建的项目默认没有Makefile，我估计把相关信息全都写在一个xml格式的项目描述文件里了。需要查查怎么在不依赖Qt Creator的条件下，直接调用qmake来编译项目。 
2. 查文档，熟悉常用GUI元素如何使用C++操作。

关于第二项计划，我想做一个Qt程序，接受SQL语句查询MariaDB，然后把查询结果在界面上显示出来。这样来了解一些控件的代码操作。

现在服务器上新建了一个Group叫SkyEye，把Qt程序迁移到这个组了。

现在这个项目的地址是 http://202.11.20.186/skyeye/qt-widget

组成员目前有三个：zhangqian, sunyaqing & qingpei

三个组成员都有权限修改代码。


.20131114

我今天主要工作内容如下：

1. 在 202.11.20.186 上搭建GitLab服务。 
  * 服务器搭建过程以及用到的信息已经更新到如下文档 http://202.11.20.244/dev_setup.htm
2. 将gitlab做成系统服务，在系统启动之后自动开始运行服务。 
3. 查阅资料，了解如何使用gnu autotools给项目自动生成makefile。 
4. 建立一个helloworld项目，实现自动makefile。项目在 http://202.11.20.186/qingpei/makefile-example

遇到的问题和明天的计划如下：

1. 无法发送系统通知邮件到@sansi.com的内网邮箱。 
  * 目前用一个gmail账号发送系统邮件，可以发送到@sansitech.com的邮箱。 
  * 非核心功能，不影响版本控制的使用，我想搁置这个问题。

如果没有外网邮箱的话，也可以由admin账号新建用户，设好初始密码告诉用户。用户首次登陆的时候会被要求更改密码。之后就可以正常使用了。

刚才给孙亚清建的用户已经能用了。

2. 如果项目用到第三方库，现在还不会写configure.ac和Makefile.am。需要查一下。 
3. Eclipse有一个autotools plugin，可以自动化一部分操作，明天试一下。 
4. 学习用Qt写图形界面。


.20131113

我今天主要工作内容如下：

1. 在 http://202.11.20.244/ 上用nginx架了个简单的http服务器，存放我写的文档。
2. 与孙亚清将现有的mysql数据库各张表导入到mariadb里。
3. 改客户端配置，连接到mariadb上的数据库，测试添加、删除操作，确认兼容性。
4. 测试中发现昨天做的打开3306(mysql)端口的iptables配置，重启后会失效，重新查资料发现Fedora 17起，默认通过firewalld而非iptables服务管理端口。用firewall-cmd配置后，测试重启后端口成功处于开放状态。昨天的文档 http://202.11.20.244/server-setup-config.htm 已经更新了这部分。
5. 安装GCC/G++和LLVM/Clang，并安装Eclipse作为Linux上的IDE。

遇到的问题和明天的计划如下：

1. 在 202.11.20.186 上配置一个Git server，用于项目版本控制。
2. 需要学习autoconf和automake等工具的使用，实现linux下工程的自动configure、生成makefile、编译安装。
3. 写一个最简单的例子实现第1条提到的自动化流程。


.20131112

我今天主要工作内容如下：

1. 安装Fedora、MariaDB
2. 配置MariaDB的远程连接
3. 配置phpMyAdmin，以便远程操作数据库
4. 写相关文档 http://202.11.20.244/server-setup-config.htm

服务器的基本信息如下：

- OS: Fedora 19.1 x86_64
- Server IP: 202.11.20.186
- Server MAC: **:**:**:**:**:**
- root password: ********
- admin account: ********
- mariadb root password: ********

目前建了一个空数据库，授权一个管理员账号在局域网内访问：

- DB_NAME = skyeye_db
- USER_NAME = skyeye_admin
- REMOTE_IP = 202.11.%
- PASSWORD = ********
- PERMISSIONS = ALL

可以通过Navicat等客户端来操作，也可访问 http://202.11.20.186/phpmyadmin/ 用管理员账号登陆操作。

明天的计划如下：

1. 尝试如何把mysql的数据库导入到mariadb
2. 检验mysql与mariadb的兼容性
3. Fedora下准备C语言开发环境，安装基本的工具

