== Worklog
////
我今天的主要工作内容如下：

. 

接下来的计划如下：

. 

////

.20140408

我今天的主要工作内容如下：

. 实现短信发送失败重试功能：发送"CONN"短信10秒后，如果设备尚未上线，重发一次短信
. ESXi上安装Windows 7用于开发LC300协议的通信程序

接下来的计划如下：

. 通读照明控制通信协议，有疑义的地方与曾磊讨论


.20140404

我今天的主要工作内容如下：

. Log中加入SMS Modem的输出
. 尝试检测SMS Modem发送状态

接下来的计划如下：

. 增加短信发送失败的检测


.20140403

我今天的主要工作内容如下：

. 202.11.4.62服务器上调试短信modem通信
  - 串口通信不稳定，有一定概率发送失败
. 根据孙亚清的需求，调整数据库设计
  - 修改contract表：直接用varchar类型存customer
  - 删除customer表

接下来的计划如下：

. 设计像素亮度计算方法
. 根据分辨率生成找圆的合适参数
. 思考圆与屏上像素的对应方法


.20140402

我今天的主要工作内容如下：

. 测试虚拟机访问短信modem是否可行
. 本地调试短信modem通信

.20140401

我今天的主要工作内容如下：

. 根据log寻找skyeye服务端本周两次crash的原因

.20140331

我今天的主要工作内容如下：

. 202.11.4.65上配置Nexenta网络存储
. 测试网络存储性能
. 将202.11.11.162上的mysql数据库迁移到202.11.4.63
. 实现SkyEye服务端在机器重启后自动运行，以及进程crash之后重启自身的功能

.20140329

我今天的主要工作内容如下：

. 202.11.4.62上安装、配置工具和库，以运行skyeye-server
. 202.11.4.63上安装mysql server
. ESXi上安装NexentaStor Community Edition用来提供网络存储

.20140328

我今天的主要工作内容如下：

. 在ESXi上安装Ubuntu Server用作mysql服务器
. 在ESXi上安装Windows Server 2003和SQL Server 2005（电子部使用）

.20140327

我今天的主要工作内容如下：

. 在新服务器上安装ESXi 5.5
. 在ESXi上安装Ubuntu Server

.20140326

我今天的主要工作内容如下：

. SkyEye: 在202.11.11.162上部署Release版服务端供测试使用
. SkyEye: 修正播放列表中有单引号 `'` 导致的SQL语法错误
. SkyEye: 找到播放列表格式不一致的问题，正在与孙亚清沟通解决
. 尝试在新服务器上安装系统

.20140325

我今天的主要工作内容如下：

. SkyEye: 修正Keepalive会被timeout重置的bug
. SkyEye: 修正查询DTU状态，crc16计算与设备端不一致的bug
  - 查明是设备端计算错误，已修正
. SkyEye: 修正DTU状态中的IP地址解析代码，现在数据库中能记录正确的IP了
. SkyEye: 修正DTU状态中的端口解析bug

.20140324

我今天的主要工作内容如下：

. SkyEye: 修正数据库device表中已经离线的设备， `device_state_id` 不为4的bug。
. SkyEye: 未连接的设备，收到任何非请求连接命令，都将其 `device_state_id` 置为4， `keepalive` 置为0。

.20140322

我今天的主要工作内容如下：

. 计算像素平均半径，再放大1.3倍以包含全部发光范围

遇到的问题如下：

. 对任意一个找到的像素，已知它的圆心坐标 `(x,y)` ，需要得到它在屏上的坐标 `(row,col)`
  - 理想情况下，用y和x作为排序的key即可
  - 实际情况是图像中的坐标并未单调有序的。若点距更小、相机拍摄角度更倾斜，则可能出现不同行的y坐标（或不同列的x坐标）范围重叠的情况
  - 还需要找一个稳定的方法来确定圆心对应屏上实际像素的位置

.20140321

我今天的主要工作内容如下：

. 修正SkyEye Server播放列表中文乱码问题
. 加ND滤镜测试目前实现的流程
. 把拍摄到的N (N=3) 张raw图片用GraphicsMagick取平均并转换成TIFF供后续分析

遇到的问题如下：

. 每张图读到内存里大约占140MB内存，现在机器2G内存不够用了，经常卡死。
  - 希望加到8G。

接下来的计划如下：

. 统一像素半径
. 对找到的圆按位置排序;设计算法生成找圆的参数
. 计算亮度
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像


.20140320

我今天的主要工作内容如下：

. 读 ftp://140.118.175.164/an%20efficient%20randomized%20algorithm%20for%20detecting%20circles.pdf[An Efficient Randomized Algorithm for Detecting Circles]
. 修正SkyEye Server设备通信报文的一个解转义bug
. 修正SkyEye Server设备通信报文的一个checksum bug
. SkyEye Server文本处理增加GBK->UTF8编码转换
  - 本地转换正确了（Log中是对的）
  - 数据库里看还是乱码，需要继续找原因

接下来的计划如下：

. 对找到的圆按位置排序
. 统一半径
. 设计算法生成找圆的参数
. 计算亮度
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像


.20140319

我今天的主要工作内容如下：

. 读 http://www.egr.msu.edu/classes/ece480/capstone/fall10/group03/ece480_dt3_application_note_dembelef.pdf[Object Detection using Circular Hough Transform]
. 修正设备断开连接后， `device_state_id` 没有更新的bug

接下来的计划如下：

. 设计算法生成找圆的参数
. 对找到的圆按位置排序
. 统一半径
. 计算亮度
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像


.20140318

我今天的主要工作内容如下：

. 读 http://www.sciencedirect.com/science/article/pii/026288569090059E[A comparative study of Hough Transform methods for circle finding]
. 调试SkyEye Server查询播放列表功能

接下来的计划如下：

. 设计算法生成找圆的参数
. 对找到的圆按位置排序
. 统一半径
. 计算亮度
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像


.20140317

我今天的主要工作内容如下：

. 在虚拟机上部署最新的SkyEye服务端程序
. 与孙亚清一同调试SkyEye服务端/客户端通信
  - 修正Device ID末尾补0带来的不一致问题
  - 设法获得新增任务的ID

接下来的计划如下：

. 设计算法生成找圆的参数
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像

.20140315

我今天的主要工作内容如下：

. 读 http://www.sciencedirect.com/science/article/pii/026288569090059E[A comparative study of Hough Transform methods for circle finding]

接下来的计划如下：

. 设计算法生成找圆的参数
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像
. 修正SkyEye Server中的服务逻辑，以符合通信流程


.20140314

我今天的主要工作内容如下：

. 找像素前进行预处理：转到CIELab空间取L通道，去噪、补孔，medianBlur
. 尝试不同参数组合，观察效果

接下来的计划如下：

. 设计算法生成找圆的参数
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像
. 修正SkyEye Server中的服务逻辑，以符合通信流程


.20140313

我今天的主要工作内容如下：

. 实现gtk窗口在外接屏幕上全屏
  - 存在两个显示器的情况下，实际获得的gdk.display只有1个，display中的screen也只有1个，尺寸是两个显示器相加
  - monitor可以获取到2个，但是monitor不是gtk对象，gtk.window也没有接受monitor作为参数的set_position之类的方法
  - 这里使用的方法是先把窗口居中，然后移动到screen最右下角（显示设置中把外接显示器放在笔记本屏幕的右侧），然后再全屏
. 尝试用Hough Transform在照片中找圆
  - http://qingpei.me/LED-Calibration/circles/src.jpg[sample input]
  - http://qingpei.me/LED-Calibration/circles/result.jpg[sample output]
  - 5796x3870的图片，耗时1~2秒

接下来的计划如下：

. 修正SkyEye Server中的服务逻辑，以符合通信流程
. 调整找圆的参数，以获得更好的结果
. 设计算法生成找圆的参数
. 动态生成显示内容
  - 给一个M*N*3的矩阵，在外接显示屏上全屏显示该RGB图像

.20140312

我今天的主要工作内容如下：

. 读 pygtk tutorial
. 用GTK实现脚本拍照前在第二块屏幕显示纯色 White, R, G, B
. 修正gitlab服务器上ruby版本问题导致的push error

接下来的计划如下：

. 修正SkyEye Server中的服务逻辑，以符合通信流程
. 照片中找像素，尝试三种可能的方法
  - 聚类
  - 分割
  - 找圆
  
  
.20140311

我今天的主要工作内容如下：

. 读 Python 2.7 文档tutorial部分
. 读 _Learning Python_ pp.27-99

接下来的计划如下：

. 修正SkyEye Server中的服务逻辑，以符合通信流程
. 实现脚本拍照前在第二块屏幕显示纯色 White, R, G, B
. 照片中找像素，尝试三种可能的方法
  - 聚类
  - 分割
  - 找圆

.20140310

我今天的主要工作内容如下：

. 完成求0/1矩阵中最大的1矩形算法

接下来的计划如下：

. 安装并调试SkyEye Server
. 控制第二块屏幕（用于镜像）的显示内容
. 照片中找像素


.20140308

我今天的主要工作内容如下：

. 求0/1矩阵中最大的1矩形算法

接下来的计划如下：

. 安装并调试SkyEye Server
. 控制第二块屏幕（用于镜像）的显示内容


.20140307

我今天的主要工作内容如下：

. 调整曝光评价函数以适应当前的相机、镜头
. 更新文件格式设置函数，以适应新机器的格式
. 拍摄全尺寸RGBW四色RAW图片
. 编译安装 OpenCV for Python 2.7
  - 很慢，还没结束

接下来的计划如下：

. 编译安装 OpenCV for Python 3.3
. 安装并调试SkyEye Server
. 控制第二块屏幕（用于镜像）的显示内容


.20140306

我今天的主要工作内容如下：

. 根据孙亚清的反馈，为SkyEye Server数据库device表中的 `height` 和 `width` 添加默认值 `0` 。
. 比较样片，确定相机设定
  - AdobeRGB
  - 自动亮度优化 OFF
  - 高光色调优先 OFF （这个会限制ISO从200起步）
  - 长时间曝光降噪 OFF （机内降噪挺模糊的）

接下来的计划如下：

. 安装并调试SkyEye Server
. 照片中找点


.20140305

我今天的主要工作内容如下：

. 拍摄不同曝光量的样片
. 拍摄不同颜色的样片
. 调整镜头的参数组合以适应采集要求
. 打开/关闭机身内亮度相关的内置优化方法，拍摄样片
. 分别用sRGB和AdobeRGB色彩空间拍摄样片

接下来的计划如下：

. 调整曝光评价函数以适应当前的相机、镜头
. 更新文件格式设置函数，以适应新机器的格式
. 比较样片，确定相机设定


.20140304

我今天的主要工作内容如下：

. 读 _The Definitive Guide to ImageMagick_ Chapter 4 & 5 & 6
. 调整GitLab服务器的size limit 从50MB => 200 MB。
  - LED校正项目里添加了几个PDF，超过了原先的尺寸限制（从log看，这几个commit加起来116MB）；
  - 如果要提交大文件，逐个push到服务器以避免超大的commit传输导致超过上限。
. 维护GitLab服务器
  - 今天上不了外网。之前的网关202.11.0.2现在不可用，目前改成202.11.0.1。
  - GitLab从6.4.3升级至6.6.4，包含一些bugfix。
. 领取采购的设备（除滤镜外，滤镜尚未到仓库）
. 测试设备

接下来的计划如下：

. 尝试找pixel位置


.20140301

我今天的主要工作内容如下：

. 读 https://github.com/edwardtoday/LED-Calibration/blob/master/ref/coloureq.pdf[Colour Space Conversion]
. 尝试转换到几种不同colorspace，比较效果。
. 读 _The Definitive Guide to ImageMagick_ 第三章

接下来的计划如下：

. 尝试找pixel位置
  - Hough transform 找圆
  - segmentation


.20140228

我今天的主要工作内容如下：

. 读 http://www.poynton.com/PDFs/ColorFAQ.pdf[ColorFAQ]
. 更新 http://qingpei.me/sansi-book/led_calibration.html#_notes_on_poynton_8217_s_faqs[Notes on Poynton’s FAQs]

接下来的计划如下：

. 尝试找pixel位置
  - Hough transform 找圆
  - segmentation


.20140227

我今天的主要工作内容如下：

. 读 http://www.poynton.com/PDFs/GammaFAQ.pdf[GammaFAQ]
. 更新 http://qingpei.me/sansi-book/led_calibration.html#_notes_on_poynton_8217_s_faqs[Notes on Poynton’s FAQs]

接下来的计划如下：

. 尝试找pixel位置
  - Hough transform 找圆
  - segmentation


.20140226

我今天的主要工作内容如下：

. 读 _The Definitive Guide to ImageMagick_ 
. 将色彩空间转换加入脚本
  - 采集到 CR2(sRGB)
  - 转换为 TIFF(CIELab的L通道)
. 读 http://www.poynton.com/PDFs/ColorFAQ.pdf[ColorFAQ], http://www.poynton.com/PDFs/GammaFAQ.pdf[GammaFAQ]

NOTE: 不用JPEG的原因是JPEG默认使用YCbCr 4:2:0存储，色彩信息会有大量损失。

NOTE: 仓库里的ImageMagick预编译版本不支持CIELab色彩空间，需要从源码编译安装。

接下来的计划如下：

. 读 _The Definitive Guide to ImageMagick_ 找畸变矫正方法


.20140225

我今天的主要工作内容如下：

. 读 _The Definitive Guide to ImageMagick_ 
. 将图像转到CIELab色彩空间

接下来的计划如下：

. 自动化色彩空间转换


.20140224

我今天的主要工作内容如下：

. http://qingpei.me/LED-Calibration/bgremoval/[背景移除]
  - 利用LED比背景亮度高很多的特点，把图像找一个threshold把图像转为黑白二色的mask
  - 用mask与原图相乘就得到排除背景的LED像素了
  - 另外一个whiteboard脚本得到的结果则是对像素的描边，可能在下一步找点过程有帮助

接下来的计划如下：

. 识别像素中心和半径


.20140222

我今天的主要工作内容如下：

. 读 _Mastering Regular Expressions_

接下来的计划如下：

. 找方法识别屏幕范围
. 背景移除

.20140221

我今天的主要工作内容如下：

. 整理分散的代码，模块化
  - 目前用到一些bash script，可以集中到python中去作为string存在
  - 模块化要实现找最优参数和后续拍摄独立，可以选择任意位置开始执行

明天的计划如下：

. 读 _Mastering Regular Expressions_


.20140220

我今天的主要工作内容如下：

. 搜索最佳曝光的参数组合
  - 可用光圈范围F/2.8-F/16 `List_A`
  - 可用快门范围4s-1/200s `List_S`
  - 上述两个List的内积是全部可用参数组合 `comb`
  - 根据曝光量（光圈*快门）对 `comb` 排序。此时 `comb` 的参数组合从最暗到最亮
  - 拍摄效果呈现先变好后变差的趋势，其中某个参数是最优的
  - 用 http://hi.baidu.com/czyuan_acm/item/81b21d1910ea729c99ce33db[三分法] 寻找这个最优参数
. 调整曝光评价方法以适应不同色彩、不同亮度的显示内容
  - 测试了white, red, green, blue, gray, 2x2大小的棋盘以及渐变色的曝光选择
  - 样片及Log: http://qingpei.me/LED-Calibration/autoexposure/white.txt[white log], http://qingpei.me/LED-Calibration/autoexposure/red.jpg[Red] http://qingpei.me/LED-Calibration/autoexposure/red.txt[log], http://qingpei.me/LED-Calibration/autoexposure/green.jpg[Green] http://qingpei.me/LED-Calibration/autoexposure/green.txt[log], http://qingpei.me/LED-Calibration/autoexposure/blue.jpg[Blue] http://qingpei.me/LED-Calibration/autoexposure/blue.txt[log], http://qingpei.me/LED-Calibration/autoexposure/gray.jpg[Gray], http://qingpei.me/LED-Calibration/autoexposure/chalkboard.jpg[chalkboard], http://qingpei.me/LED-Calibration/autoexposure/plasma.jpg[plasma]
  
遇到的问题如下：

. gphoto2操作相机拍照速度挺快，但是设置相机参数耗时不少。在480种参数组合中搜索最优，需要拍摄20次左右。这个寻找最佳参数的过程中，照片尺寸用的是最小的JPEG，300KB左右，从相机下载到本地全过程约1秒钟。设定光圈和快门则分别耗时3到4秒，占搜索过程的绝大多数时间。

明天的计划如下：

. 整理分散的代码，模块化
  - 目前用到一些bash script，可以集中到python中去作为string存在
  - 模块化要实现找最优参数和后续拍摄独立，可以选择任意位置开始执行


.20140219

我今天的主要工作内容如下：

. 写脚本
  - 用gphoto2采集照片
  - histogram分析
  - 调整拍摄参数直到曝光符合条件

明天的计划如下：

. 调整曝光评价方法以适应不同色彩、不同亮度的显示内容


.20140218

我今天的主要工作内容如下：

. 读 _Mastering Regular Expressions_
. 用grep和awk提取4个不同亮度值（127,220,240,254）的percentile
. 写脚本获取相机支持的ISO、Aperture、Shutterspeed、Image Format列表

明天的计划如下：

. 写脚本
  - 用gphoto2采集照片
  - histogram分析
  - 调整拍摄参数直到曝光符合条件


.20140217

我今天的主要工作内容如下：

. 拍摄Red, Green, Blue, White, Grey的样片来搜索合适曝光的判定条件。
  - 图像转换到CIELAB色彩空间，计算 http://qingpei.me/LED-Calibration/colorspace/cielab_l.jpg[L通道]的histogram，满足如下两个条件认为曝光合适
    . `percentile(250)>99.8%` && // no highlight clipping
    . `percentile(220)-percentile(127)>3%` // ensure enough pixels with values < 220
  - 此外，CIELAB的 http://qingpei.me/LED-Calibration/colorspace/cielab_a.jpg[A通道]和 http://qingpei.me/LED-Calibration/colorspace/cielab_b.jpg[B通道]肉眼观察下来对找点有帮助

明天的计划如下：

. 提取输出文本中的percentile
  - 实验sed, awk等工具
  - 还要了解正则表达式的写法
. 写脚本用gphoto2采集照片->histogram分析->调整拍摄参数直到曝光符合条件


.20140215

我今天的主要工作内容如下：

. 用ImageMagick计算cumulative histogram
  - 现在的输出是256级灰阶的percentile


明天的计划如下：

. 多拍一些样片来寻找合适的过曝判定条件
. 自动化histogram分析


.20140214

我今天的主要工作内容如下：

. 确定相机、镜头、附件需求
  * Canon EOS 5D Mark III (5760x3840, 22.1MPix) 14-bit RAW
    - 目前佳能系统最高的分辨率
    - 镜头群丰富
    - LiveView对焦易操作
    - 兼容目前用到gphoto2、dcraw、ufraw等一系列开源工具
  * SanDisk Extreme Pro 95MB/S SD 64G
  * Sigma 120-300mm F2.8 DG OS HSM S Canon
    - 目前为数不多的高画质长焦变焦镜头，多个评测显示其300mm端素质堪比Canon 300 F2.8L。
    - 价格大幅低于这个焦段的定焦
  * Sigma USB Dock
  * Sigma 2.0X Teleconverter EX APO DG
    - 把焦距扩展到240-600mm，供室外远距离拍摄，此时F5.6光圈下自动对焦依旧可用。
  * B+W MRC-UV 105mm
    - 保护镜
  * B+W ND Filter 103 105mm
    - 减3档曝光。102减4档，101减2档。没搜到(京东、亚马逊、淘宝、sigma官网等国内渠道)105mm口径的其他ND滤镜。
. 手动调整参数寻找合适的不过曝情形
  - 近乎突变，从亮度非常高=>降一档快门后略微可见蓝红两色
  - 不过这时的照片中 #FAFAFA 以上的像素已经不太多了
. 连拍N张去平均，看降噪效果
  - 今天的测试效果不明显

明天的计划如下：

. 寻找过曝/不过曝边界在数值上的体现（猜测histogram能区分）


.20140213

我今天的主要工作内容如下：

. 在笔记本上安装配置用到的工具
. 映射纯白图像至模块，用不同参数拍照
. 写脚本解码CR2图像，截取中间400x400部分用作比较
  - 相机是我带来的6D，图像尺寸5496x3670 (20.2MPix)
  - 镜头带了3个: 50 f/1.8, 24-105 f/4L IS, 70-200 f/4L IS
. 比较 http://qingpei.me/LED-Calibration/comparison/[不同参数的效果]，结论是
  - 光圈不能小，小光圈明显拍出星芒。对焦准确的前提下，大光圈产生紫边，相对小一些的光圈有些光晕。 *建议* F/4 或更大。
  - 快门不能太快，1/500秒有时会拍到刷新中的行，1/2000秒几乎没有全亮的。*建议* 最快1/100秒。
  - 前两条是冲突的，所以需要 *ND滤镜* 减光。

遇到的问题如下：

. 并行处理RAW图片的时候，内存不大够用了……

明天的计划如下：

. 确定相机、镜头、附件需求
. 连拍N张去平均，看降噪效果
. 全图处理：histogram matching, white balance

.20140212

我今天的主要工作内容如下：

. 编译安装 ImageMagick 6.8.8, GraphicsMagick 1.3.19, dcraw 9.20
. 比较 dcraw, ImageMagick, GraphicsMagick 的解码结果
  - dcraw 的白平衡比 im 和 gm 偏暖些
  - dcraw 和 gm 把 RAW 解码成 16-bit TIFF 比 im 快很多，gm 解成PNG也比 im 快很多
. 测试上述几个工具使用不同参数的影响
  - dcraw 使用 `-W` 关闭自动亮度优化
  - gm 修改 delegates 配置文件增加dcraw参数
. 熟悉显示模块映射内容的过程，能够在Linux下控制模块显示的内容

明天的计划如下：

. 读 _The Definitive Guide to ImageMagick_ 
. 熟悉 ImageMagick 各种功能的使用


.20140211

我今天的主要工作内容如下：

. 熟悉gphoto使用
  * 发现_PTP_和_PC_模式之间的差异，_PC_模式下对拍摄参数有更多控制
  * CLI控制拍照，连续拍摄N张->下载到本地
. 写 https://github.com/edwardtoday/LED-Calibration/blob/master/src/captureN.py[拍照脚本]
  * 设置拍摄参数：ISO 快门 光圈 手动对焦
  * 连续拍摄N张
  * 下载到本地 (自定义文件名)

明天的计划如下：

. 读 _The Definitive Guide to ImageMagick_


.20140210

我今天的主要工作内容如下：

. 读 _The Definitive Guide to ImageMagick_

明天的计划如下：

. 熟悉gphoto使用
. 写拍照脚本
. 读 _The Definitive Guide to ImageMagick_

.20140126

我今天的主要工作内容如下：

. 安装imagemagick
. 熟悉imagemagick的python bindings
. 安装libraw
. 安装dcraw

节后的计划如下：

. 写拍照脚本
. 读raw image
. 除背景
. 取像素
. 算亮度、误差
. 算校正矩阵

.20140125

我今天的主要工作内容如下：

. 浏览 _Color Appearance Models_ by Mark D. Fairchild
. 写实验框架，把各个步骤要完成的核心任务列出来，规定各步骤的输出
. 添加lib目录（目前有opencv）

明天的计划如下：

. 安装imagemagick
. 熟悉imagemagick的python bindings


.20140124

我今天的主要工作内容如下：

. 读校正相关资料，更新 http://qingpei.me/sansi-book/led_calibration.html[文档]

明天的计划如下：

. 写个实验框架，把各个步骤要完成的核心任务列出来，拟定各步骤间的接口


.20140123

我今天的主要工作内容如下：

. 读校正相关资料，更新 http://qingpei.me/sansi-book/led_calibration.html[文档]
. 搜索raw decoder相关信息，目前看来以下两种途径可行
  - 调用ImageMagick或dcraw进程处理raw文件，读取处理结果
  - 链接libraw库，直接读取raw图像
  
考虑实现复杂程度的话，调用外部程序读raw的方式，开发时会更方便做实验比较。把处理好的raw写成16bit的tiff，也让后续处理时库的选择几乎不会再遇到格式支持问题。

明天的计划如下：

. 继续读校正相关资料


.20140122

我今天的主要工作内容如下：

. 写 `gphoto2` https://github.com/edwardtoday/LED-Calibration/blob/master/script/install_gphoto2.sh[安装脚本]
. 继续读校正相关资料

明天的计划如下：

. 继续读校正相关资料


.20140121

我今天的主要工作内容如下：

. 测试 `gphoto2` 与 Olympus E-520 的兼容性
  - 可以auto-detect，可以list-files，可以get-all-files
  - 不可以capture-image
. 测试 `gphoto2` 与 Canon EOS 7D 的兼容性
  - 可以auto-detect，可以list-files，可以get-all-files
  - 可以capture-image
. 更新 http://qingpei.me/sansi-book/led_calibration.html#_image_capture[Image Capture文档]

明天的计划如下：

. 写 `gphoto2` 安装脚本
. 继续读校正相关资料


.20140120

我今天的主要工作内容如下：

. 读专利文档：LED显示屏非均匀性在线校正系统和校正方法。了解其校正系统读构成和校正流程。
. 读昨天搜集到的资料，了解色彩校正的一些概念和技术，写 http://qingpei.me/sansi-book/led_calibration.html#_notes_on_led_calibration_handbook[摘要]

明天的计划如下：

. 继续读校正相关资料


.20140118

我今天的主要工作内容如下：

. Wikipedia上搜集色彩校正相关材料 https://www.dropbox.com/s/vfgfq60mrp2b1rq/LED%20Calibration%20Handbook.pdf[PDF]
. 读libgphoto2的sample，了解如何操作相机

明天的计划如下：

. 尝试用libgphoto2连相机拍照


.20140117

我今天的主要工作内容如下：

. 写 skyeye_server http://202.11.11.201/skyeye/skyeye-server/blob/master/README.md#toc_3[命令行用法]
. 更新 http://qingpei.me/sansi-book/led_calibration.html[亮度矫正memo]

明天的计划如下：

. 记录亮度矫正项目需要解决的问题
. 根据问题寻找资料，阅读，并记下可能的解决方法


.20140116

我今天的主要工作内容如下：

. 修正 `CMakeLists.txt` 对Clang编译器的C++11 Flag设置
. 修改 `CMakeLists.txt` ，增加 `googletest` 库
. 为以下模块写单元测试
  - `toolkit`
  - `config`
  - `packet`

遇到的问题如下：

. 网络和数据库相关的测试不好写
  - 各个对象起初设计的时候耦合度就高，成员函数的参数多为之前一系列函数操作后的结果；内部也常需要调用外部的资源。
    * 比如查询状态需要一个socket连接
    * 比如发送一个登陆成功应答，要查询数据库得到手机号
    * 比如 `tcp_connection` 调用 `tcp_server` 的函数
  - 于是生产函数需要的传入参数对象很难
  - 另外，函数的执行结果大多不是通过返回值来传递的。
    * 收报文的函数A把任务交给报文分类的函数B
    * B又将报文转给某一类报文的处理函数C
    * C再调用数据库和网络通信的一些函数来响应收到的报文，但却很难用一个成功/失败的标志作为返回值
    * 尤其是对异步函数的调用，设好callback之后就直接返回了，这时候成功或失败还无法判定
  - 所以目前只为离线的工具函数写了测试

明天的计划如下：

. 读亮度矫正代码


.20140115

我今天的主要工作内容如下：

. 整理一份 http://qingpei.me/sansi-book/git.html#use_git[git使用指南]

明天的计划如下：

. 写单元测试


.20140114

我今天的主要工作内容如下：

. 重写关闭连接 (用户发起或读到 `EOF` )逻辑，避免socket没有close或者close两次的bug。
. 测试多线程运行服务器
  - 用 `boost::asio::io_service::strand::wrap` 将异步handler隐式加锁之后，多线程运行服务器不会遇到race condition了
  - 最大同时连接数(最大打开文件数)为100X (1024-依赖的动态链接库等文件的数量-正在写入的log文件数量等等)
  - 测试了Release版性能，结果 http://202.11.11.201/skyeye/skyeye-server/blob/master/README.md#toc_1[记在了README里]
. 通过API获取服务器公网IP (客户端能连接的IP地址)
. 解决最大文件数限制
  - http://qingpei.me/sansi-book/skyeye.html#_max_open_files[改成65536了]
. 消除两处内存泄露

明天的计划如下：

. 整理一份git使用指南


.20140113

我今天的主要工作内容如下：

. 配置Version Control System服务器
  - GitLab Email配置，系统通知用 `gitlab@sansi.com` 帐号发邮件
  - 每天早上5点自动备份数据库和代码库，备份保留一周
  - 添加Group: SkyEye和LED-Calibration
  - 添加User: zhangqian ouwenli sunyaqing qingpei
  - 添加Project: 此前备份的全部project，包括我和孙亚清的代码

明天的计划如下：

. 尝试解决20140110遇到的问题


.20140111

我今天的主要工作内容如下：

. 配置Version Control System服务器
  - 固定IP 202.11.11.201
  - OpenSSH Server
  - redis-server
  - ruby
  - mysql-server
  - gitlab
  
相关文档见 http://qingpei.me/sansi-book/git.html#gitlab_server_new

明天的计划如下：

. 配置VCS服务器
. 尝试解决20140110遇到的问题


.20140110

我今天的主要工作内容如下：

. 把成员变量中的指针用shared_ptr替换
. 解决keepalive_timer会不断触发频繁调用handler的bug
  - 当cancel这个timer的时候，handler会被调用一次，传入参数为error，内容是operation canceled。之前的handler函数不理会传入参数，所以这次调用也会发送keepalive包，并且重置timer。
  - 修正后的handler检查error，如果意外触发，打印error直接退出handler，不发送keepalive，也不重置timer。
. 把async操作的handler都用 `boost::strand` 序列化
. 解决串口访问permission denied
  - 把用户加到dialout组
. 三楼机房服务器安装ubuntu server
  - 202.11.20.83

遇到的问题如下：

. tcp_connection断开后，close和析构函数的调用有bug，待跟踪
. 尝试重用socket (连接数超过最大可打开文件数限制时，如何应对传入连接)

明天的计划如下：

. 在202.11.20.83 上安装gitlab


.20140109

我今天的主要工作内容如下：

. 从Qt官网安装 Qt 5.2.0 （Ubuntu官方源的Qt Creator显示有问题，会弹出一些无响应的空窗口，原因不明。官网安装的版本就没问题。）
. 修正SkyEye-Monitor设备列表添加状态字段后，信息tab内容不显示的bug。
  - sql语句构建过程中用到设备列表项目的text()方法，现在该方法返回的不仅是device_id了。需要提取id。
. 调整SkyEye-Monitor设备列表排序
  - 先按设备状态排序：在线->一般故障->……->离线
  - 再按最后连接时间排序：最近连接的排在最前

明天的计划如下：

. 实验boost asio多线程


.20140108

我今天的主要工作内容如下：

. 配置ubuntu 13.10开发机，节省fedora上从源码编译安装gcc和libboost的耗时
. 202.11.11.162上部署测试用数据库

明天的计划如下：

. 实验boost asio多线程
. （等服务器硬件到位）配置ubuntu server 13.10服务器
  - 安装ubuntu server 13.10
  - 配置openssh server
  - 安装配置mysql server
  - 安装配置gitlab
  - 安装配置gitlab-ci


.20140107

我今天的主要工作内容如下：

. 清除头文件中全部using declaration
. 检查各处container成员访问是否可能越界
. 清除函数参数中的const pass-by-value写法
. 检查函数返回值是否有本地变量引用

遇到的问题如下：

. Fedora开发机改成固定IP之后，之前搭建的gitlab服务器出问题了。现在把所有的repository备份出来了，重新配置服务器。

明天的计划如下：

. 重新配置gitlab


.20140106

我今天的主要工作内容如下：

. 测试 sms modem 串口通信代码
  - 波特率设置成115200
  - 部署时需要在 `config.json` 中指定连接的串口设备名，现在写的是 `/dev/ttyS0` 具体要看到时连接的是哪个口
  - Fedora开发机上短信发送成功
. 清除全部using directives

明天的计划如下：

. SMS modem代码单独线程执行
. 检查各处container成员访问是否可能越界


.20140104

我今天的主要工作内容如下：

. 调整Qt界面， 设备列表显示当前状态

明天的计划如下：

. 测试 sms modem 串口通信代码


.20140103

我今天的主要工作内容如下：

. 把 `constants.h` 中可能会变的参数移到json配置文件里，启动时用cppjson库解析
. 把 `sql_statements.h` 中的SQL 语句移到json配置文件里，启动时用cppjson库解析
. 清理不必要的 `#include`

明天的计划如下：

. 调整Qt界面， 设备列表显示更多信息


.20140102

我今天的主要工作内容如下：

. 做个Qt设备状态查看界面的草样
  - 连接数据库
  - 显示device id列表（按last_connected排序）
  - 显示选中device的device表内容和playlist内容
  - 显示选中device的status表内容
  - 显示选中device的event表内容

明天的计划如下：

. 把 `constants.h` 中可能会变的参数移到json配置文件里，启动时用JsonCPP库解析


.20131231

我今天的主要工作内容如下：

. 用Valgrind检查内存泄露，现在服务端正常退出的话，全部内存都释放了。
. 找到数据库访问产出segfault的原因
. 测试服务端多连接性能 （虚拟客户端连接服务端，并发送DTU Login报文，收Login反馈）
  * 并发1000个客户端，服务端可以处理全部连接
  * 并发2000个客户端，服务端处理不了会reject传入连接，之前的连接处理完之后，再传入连接正常接受
  * 目前只有socket读写是async的，handler全部是blocking的方法。当线程在执行handler的时候，就无法接收新连接了，需要等到handler完成，进入下一次async读或写的时候，才会调度到接收连接的方法。虽然目前的测试条件下，还是可以处理几百到几千个并发连接，但如果某个时刻，数据库访问突然慢了，那么handler就卡在数据库操作上，这段时间就都无法接收新连接。
  

遇到的问题如下：

[qanda]
并发连接很多时，在执行 `mysql_query()` 的位置会报segfault::
问题出在多线程访问 `MYSQL*` 指针上，执行 `mysql_query()` 不是thread-safe的。
+
现在先改成单线程执行服务端。
+  
多线程跑服务端还不能简单的用多个线程执行所有组件，得把非线程安全的部分提出来单独在一个线程执行。
+  
目前想到可能的多线程解决方法
+  

- `exec_sql()` 加锁
- 用boost strand令数据库操作无法并行
- 把 `database_operator` 放在单独的 `io_service` 执行。

+
考虑到上面提到的性能问题，多线程是必须的，未来几天会尝试这些方法，解决数据库访问。

明天的计划如下：

. 做个Qt设备状态查看界面的草样
  - 先把信息显示读出来并显示在界面上
. 把 `constants.h` 中可能会变的参数移到json配置文件里，启动时用JsonCPP库解析


.20131230

我今天的主要工作内容如下：

. 调试服务端mysql连接问题
. 数据库连接丢失后自动重连
. 多线程执行server connection handler

遇到的问题如下

[qanda]
Lost connection to MySQL server during query::
+
`/var/log/mysqld.log` 中记录了
+
----
131230  9:31:04 [Warning] IP address '202.11.12.186' could not be resolved: Name or service not known
----
+
原因是mysqld会通过dns检查用户的hostname是否属于用户表里指定的域。一旦dns查询超时或者失败，就会报这个错，然后这个连接就被abort了。
+
解决方法是在 `/etc/my.cnf` 中加入一行
+
----
skip-host-resolve
----
+

解决了上一个问题之后，并发query多的时候，还是会丢失连接::
+

`/var/log/mysqld.log` 中记录了
+
----
131230 10:08:21 [Warning] Aborted connection 3 to db: 'skyeye_db' user: 'skyeye_admin' host: '202.11.12.186' (Unknown error)
----
+
并且这个问题的发生还有个条件，就是两条query“同时”由同一个user在同一个host上执行，就会丢失连接。如果让测试程序并行生成两个客户端连接，立刻DTU login，每次都会出问题；两次生成客户端之间sleep几十毫秒，则极少出问题。
+
目前查不到是什么原因导致的。现在通过 `mysql_options()` 函数让服务端的mysql query发生lost connection错误后自动重连重试避开这个问题。

明天的计划如下：

. 考虑查看数据库中device详情的Qt界面设计
. 用当前glibc编译安装mariadb，试试还有没有问题
. 用valgrind查查会不会是指针指向的内存被意外覆盖了


.20131228

我今天的主要工作内容如下：

. 继续实现模拟客户端的功能
  - 应答DTU Keepalive
  - 产生事件，收到读事件报文时，发送事件
  - 产生一个字符串作为播放列表，收到读播放列表时，发送该字符串
. 模拟客户端的如下功能配合本地或202.11.111.162上的服务器通信测试成功
  - DTU登陆、Keepalive
  - 读状态、事件、播放列表

遇到的问题如下

[qanda]
模拟客户端同时发起很多连接时，会被服务器拒绝连接::
  让模拟客户端做完DTU登陆后就退出，这种情况下大约突发100多连接时，server报segment fault，这个需要跟踪一下哪个指针出了问题
服务器连到数据库的socket会失效::
  昨天测试的时候，每次并发连接数多了会这样。今天发现只要server开着的时候，用mysql workbench或者navicat去连接数据库并提交任务，server也会报错说lost connection。可能是配置问题，需要查查文档。

明天的计划如下：

. 考虑查看数据库中device详情的Qt界面设计
. 多线程执行server connection handler


.20131227

我今天的主要工作内容如下：

. 继续实现模拟客户端的功能
  - 产生状态，收到读状态报文时，发送状态
  - 写SkyeyeClient struct，改写函数为对象方法
  - 在goroutine中执行client行为
. 并发连接测试
. 补全服务端函数注释并重新生成文档

遇到的问题如下：

. 模拟客户端同时发起很多连接时，会被服务器拒绝连接
. 服务器收到同时过多连接时，连到数据库的socket会失效

原因待查

明天的计划如下：

. 继续实现模拟客户端的功能
  - 应答DTU Keepalive
  - 产生事件，收到读事件报文时，发送事件
  - 产生一个字符串作为播放列表，收到读播放列表时，发送该字符串
. 考虑查看数据库中device详情的Qt界面设计


.20131226

我今天的主要工作内容如下：

. 修正服务端处理格式不正确的状态和事件报文时会访问到空指针的问题
  - 收到 `0x20` 分割的数据，代码用 `0x2C` 分割不出4个字段：客户端更新前，先用 `0x20` 分割。
  - 用 `0x20` 分割，遇到日期会有5个字段，SQL执行报错：将错误写到log，跳过该行。
. 修正服务端 `escape()` 的bug
. 用Go语言写模拟客户端（用于调试和N客户端性能测试），已实现
  - 发起和断开TCP连接
  - 构建DTU Login报文并发送
  - 收到服务器发回的包并显示
  - 对收到的包类型进行switch/case处理

明天的计划如下：

. 继续实现模拟客户端的功能
  - 应答DTU Keepalive
  - 随机产生DTU信息并写入到数据库，退出时删除产生的device
  - 随机产生N行状态，收到读状态报文时，发送状态
  - 随机产生N行事件，收到读事件报文时，发送事件
  - 随机产生一个不定长字符串作为播放列表，收到读播放列表时，发送该字符串


.20131225

我今天的主要工作内容如下：

. 确定DTU状态表的定义，写相应的SQL语句
. 将DTU状态查询的数据库更新逻辑补全
. 写手动测试的sql脚本
. 修正一个sql语句错误写法
. 修正一个计算checksum的bug

明天的计划如下：

. 写测试客户端模拟一个远端设备的收发包逻辑


.20131224

我今天的主要工作内容如下：

. 实现设备登录后立即读取状态和事件
. 更新数据库定义
  - keepalive标识 类型为 `tinyint(1)` 0表示false，1表示true
  - 增加读DTU状态用户命令类型 `command.id=7`
. 增加查询DTU状态功能
. 收到DTU状报文态后，解析IP为char[]、端口、版本号为unsigned short、信号质量为unsigned char
. 数据库的keepalive标识和tcp_server自己管理的map同步
. 用go语言写测试客户端，向数据库插入一些任务

遇到的问题如下：

. DTU登录报文的地理信息4字节格式不明
. DTU状态报文的定位数据9字节格式不明

明天的计划如下：

. 确定DTU状态表的定义，写相应的SQL语句
. 将DTU状态查询的数据库更新逻辑补全
. 用测试客户端模拟一个远端设备的收发包逻辑


.20131223

我今天的主要工作内容如下：

. 写测试用客户端，自动往数据库提交任务

明天的计划如下：

. 更新数据库定义，加入DTU状态和keepalive标识，增加读DTU状态用户命令类型
. 实现读DTU状态并存储到数据库
. 实现设备登录后立即读取状态和事件
. 继续实现测试用客户端，自动往数据库提交任务


.20131221

我今天的主要工作内容如下：

. 修改配置文件，设置虚拟机时区为 `Asia/Shanghai`
. 修改glog库，以支持自定义日志文件扩展名；重新编译、安装glog库
. 清理虚拟机 `/`, `/boot`, `/EMPTY` ，将打包的box文件从700MB降至435MB

明天的计划如下：

. 写测试用客户端，自动往数据库提交任务
. 在202.11.11.162上运行服务端，根据log调试代码


.20131220

我今天的主要工作内容如下：

. 重新打包虚拟机
  - 以ubuntu cloud镜像为起点安装项目用的gcc、cmake、boost、libmysqldev等依赖，目前的机器性能和网速要花几小时
  - 昨晚到今天上午把配置好的虚拟机重新打包成一个vagrant box，使用这个box只要一两分钟就能重新部署一台新的服务器了
. 代码中增加了一些退出条件，比如连不上数据库或者数据库没有需要的表，则提示错误后退出。
. 202.11.12.186上 `skyeye_db` 数据库建表
. 202.11.11.162开放9801端口进行监听
. 将"测试3"设备的DTU连接信息改为202.11.11.162:9801
. 在数据库中添加设备： "测试3"
. 成功连接设备
. 修正连接设备过程中查到的代码逻辑错误

遇到的问题如下：

主要都是配置虚拟机时遇到的问题。

[qanda]
Ubuntu 12.04的工具太旧了，编译安装新版的gcc、cmake等需要安装许多依赖，昨天用一台机器跑了大半天还没结束::
  换成13.10版了。这样可以直接用 `apt-get` 安装编译好的二进制文件，快很多。
编译时和运行时的library include path不一致::
  人工建立symlink再运行 `ldconfig` 解决
运行时提示glibc版本不对::
  编译安装gcc之后，安装脚本并未把编译出来的 `libstdc++6.so` 复制到应有的路径，人工复制并建立必要的symlink解决

明天的计划如下：

. 在202.11.11.162上运行服务端，根据log调试代码
. 虚拟机时区不对，在GMT，要改成+8区。不然插入数据库的时间戳不好理解……


.20131219

我今天的主要工作内容如下：

(在202.11.11.162上)

- 安装Virutalbox+Vagrant
- 安装虚拟机编译运行skyeye_server
  * 解决VM启动、glog安装、gcc版本等问题
  * 修改配置绑定9800端口

遇到的问题如下：

[qanda]
202.11.11.162上虚拟机无法启动::
  系统是32位的，运行不了64位虚拟机，修改配置使用precise32，成功
安装glog库报错"configure: error: cannot run /bin/bash ./config.sub"::
  安装libtool解决
自带gcc是4.6的，不支持c++11；ppa中最新是4.8.1的，不支持map的initialization list::
  从源码编译安装gcc-4.8.2(正在解决)

明天的计划如下：

. 重新打包虚拟机
  * 从刚装好的系统配置各种依赖的库、工具耗时太长了。把装好全部依赖的状态打包留存以后部署使用。
. 调试代码


.20131218

我今天的主要工作内容如下：

. `sms_modem` 类通过串口连接modem
. 数据库读到要求连接任务时，发送"手机号#CONN"格式的数据请求设备连接

遇到的问题如下：

[qanda]
make之后的可执行文件正常，make install复制的可执行文件运行时提示"Symbol lookup error"::
  用 `ldd` 查看依赖关系发现两个文件依赖的glog不同，一个在 `/usr/lib64` ，另一个在 `/usr/local/lib` ，后者是我编译安装的位置。用我编译的版本覆盖 `/usr/lib64` 中的版本，问题解决。

明天的计划如下：

. 在202.11.11.162上安装linux虚拟机，编译运行skyeye_server
. 将202.11.11.162:9912端口映射到虚拟机的该端口，让虚拟机处理连接。
. 开始在202.11.11.162调试skyeye_server的代码


.20131217

我今天的主要工作内容如下：

. 写 `tcp_connection` 成员函数内收到DTU报文的数据库操作
  - 收 `0x00` 登录
    * 更新 `device.device_state_id`
    * 更新 `device.last_connected`
  - 收 `0x01` 心跳
    * 更新 `device.last_connected`
. 写 `tcp_connection` 成员函数内收到设备报文的数据库操作
  - 收 `0x00` 读取状态
    * 解码状态 "type,attr,value,error\n"
      - 插入 `status` 全部新状态
      - 根据status_warn表计算device_state TODO：读数据库生成本地status_warn
    * 更新 `device.last_connected`
    * 更新 `device.last_status`
    * 更新 `device.device_state_id`
    * 删除 `status` 中的旧状态
  - 收 `0x01` 读取事件
    * 更新 `device.last_connected`
    * 更新 `device.last_event`
    * 更新 `event`
  - 收 `0x02` 读取播放列表
    * 更新 `device.last_connected`
    * 更新 `device.last_playlist`
    * 更新 `playlist`

明天的计划如下

. 短信Modem串口通信


.20131216

我今天的主要工作内容如下：

. 补全数据库定义 http://202.11.11.201/skyeye/skyeye-server/blob/master/doc/db_spec.asciidoc
. 写生成table的SQL语句 http://202.11.11.201/skyeye/skyeye-server/blob/master/doc/init_db.sql
. 补全文档中对服务端各个功能对应的网络和数据库操作描述
. 写 `tcp_connection` 成员函数内的数据库操作

明天的计划如下

. 继续写 `tcp_connection` 成员函数内的数据库操作


.20131214

我今天的主要工作内容如下：

. 学习串口编程

明天的计划如下

. 写SQL语句
. 在 `tcp_connection` 的成员函数内，执行相应的SQL语句


.20131213

我今天的主要工作内容如下：

. 更新Vagrant配置，让虚拟机安装glog。
. 完成考核表
. 更新数据库event表字段定义，更新status格式注释
. dotfiles & dotfiles-private on GitHub
. Build vim74 for Fedora

明天的计划如下：

. 学习串口编程


.20131212

我今天的主要工作内容如下：

. 从 `grps.c` 确定状态、事件报文格式
. 修改 `constants.h` 定义的变量名，尽量同gprs.h相似
. 写状态、事件报文分割函数，用给定字符分行及分列
. 完成 `skyeye_server`, `tcp_server`, `tcp_connection` 的调用逻辑
. 读DTU、设备的操作超时会记录在log了。
. 实现设备返回 `result != 0x00` 后的3次重试及失败记录。

明天的计划如下：

. 确定数据库table定义，写相关的SQL语句
. 在 `tcp_connection` 的成员函数内，执行相应的SQL语句

.20131211

我今天的主要工作内容如下：

. 取消toolkit.h中定义的全部变量和函数的static声明，改成extern声明，在toolkit.cpp中定义一次，消除了unused警告。
. 给 `tcp_server` 和 `tcp_connection` 增加 `database_operator` 类型的handle以调用数据库相关的函数。
. 写设备状态报文的解析函数。
. 将遍历STL容器的for loop改写为 http://en.cppreference.com/w/cpp/language/range-for[range based for loop]
. 用Google Logging Library写日志文件
  - 编译安装了glog
  - FindGlog.cmake让CMake自动找到glog安装位置
  - CMake在build时会生成 `bin\log` 目录（ `bin` 是 `make install` 的安装位置）
. toolkit中写了从byte array生成hex string的函数，用来打印收到和发送报文的raw data

遇到的问题如下：

. 事件报文格式未定义
. 通信协议中，读取状态、事件、播放列表时，如果设备返回的 `result != 0x00` ，也就是读取失败的情况下，监控中心PC行为未定义。

明天的计划如下：

. 写DTU、设备的数据库更新逻辑
. 将 `skyeye_server`, `tcp_server`, `tcp_connection`, `database_operator` 相互调用的逻辑补全


.20131210

我今天的主要工作内容如下：

. 写 `packet_device` class及相关enum、工具函数
. 写设备通信报文的接收/发送逻辑
. 检查代码中的参数，能传(const)引用的就不传值
. 划分 `namespace skyeye::net` 和 `namespace skyeye::db` ，尽量避免常量名冲突或是超长的常量名
. 补全已有代码的注释
. 更新文档

明天的计划如下：

. 写设备报文内容（状态、事件、播放列表）的parse函数


.20131209

我今天的主要工作内容如下：

. 更新数据库描述文档 http://202.11.11.201/skyeye/skyeye-server/blob/master/doc/db_spec.asciidoc
. 写数据转义、解转义函数
. 写DTU通信逻辑
  - 登录/回复
  - 收发keepalive报文
  - 收发查询报文
  - 发送转发报文

明天的计划如下：

. 写设备通信逻辑


.20131207

我今天的主要工作内容如下：

. 向孙亚清请教通信程序的实现，包括收发包的方式、数据的格式等
. 与孙亚清讨论数据库的定义

明天的计划如下：

. 更新数据库设计文档
. 写数据转义、解转义函数
. 写DTU登录和KeepAlive逻辑


.20131206

我今天的主要工作内容如下：

. 配置基于Vagrant和VirtualBox的虚拟机编译环境。
  * 只要一个命令 `vagrant up` ，就可以在Windows/Mac/Linux下自动下载、配置虚拟机(Ubuntu 12.04 LTS)
  * 虚拟机包含项目依赖的所有工具和库，可以直接编译运行SkyEye-Server项目代码。
. 使用虚拟编译环境的文档已经更新至 http://202.11.11.201/skyeye/skyeye-server/blob/master/README.md
. 增加对不同版本gcc的支持
  * Ubuntu 12.04装的gcc版本是4.6，而Fedora 19则是4.7。前者需要 `CXX_FLAGS` 中用 `-std=c++0x` ，后者则是 `-std=c++11` 。
  * 在CMakeLists.txt中用判断语句针对不同的gcc版本分别设定 `CXX_FLAGS`
. 解决不同版本boost存在区别的问题
  * 此前只在boost 1.53和1.55版本下编译过项目，Ubuntu 12.04的boost版本是1.46.1，还没有 `boost::container::map` 。修改项目代码，用 `std::map` 替代了。

明天的计划如下：

. 向孙亚清请教通信程序的实现细节。


.20131205

我今天的主要工作内容如下：

. 用 `shared_ptr` 封装packet对象再传递给处理函数，处理完毕后对象会自动被回收
. 解决读到 `0x00` 之后的字符被砍掉的问题。下面有描述。
. 解码报文内容，提取报文头、报文类型、数据、校验和以及报文尾。
. 验证校验和

遇到的问题如下：

. 昨天用 `boost::asio::async_read_until()` 实现读到某个特定字符后调用callback，用telnet实验的时候因为无法输入 `0x00` , `0x02` , `0x03` 等值，用 `$` , `&` 等符号来试的。但是读到一个 `char[]` 之后，因为char string的定义， `0x00` 被认为是字符串结束符。后面的数据被抛弃了。现在用 `unsigned char[]` 和 `memcpy` 来操作buffer中读到的数据，可以应对包含 `0x00` 的内容了。

明天的计划如下：

. 根据报文类型写相应的处理逻辑。


.20131204

我今天的主要工作内容如下：

. 解决telnet连接后直接断开的问题。
  - error code显示125，可能是 `tcp_connection` 类或者存放数据的buffer在callback函数被调用时，已经被析构了。
  - 解决方法有两种，一是手动new/delete；二是让 `tcp_connection` 类继承 `enable_shared_from_this` 接口，在需要this指针的callback函数中，用 `shared_from_this()` 生成一个指向当前对象的 `shared_ptr` ，保证在有引用的情况下，对象始终存在。第二种在boost例子和网上讨论中比较常用。
  - 目前用第二种方法解决了该问题。
. 消除编译时的warning。
. 实现server从 `socket` 读取数据，直到读出 `0x03` 时，调用callback函数处理读到的包。
. buffer中的数据可能不止到 `0x03` 的位置，手动提取数据包自身的部分到一个 `char*` 。

遇到的问题如下：

. 提取到 `char*` （或者 `char[]` ）就意味着要在结构体内把它delete掉（或者任它自己在结构体执行完毕后被回收），这样就无法将处理数据包的逻辑写到另一个函数去，除非传参的时候不传指针或者引用，而传拷贝。每个包都复制很多遍的话，时间长了会产生很多内存碎片。
  - 需要找一个方式，用 `shared_ptr` 来传递参数给数据包处理函数，让对象在没有引用之后自动析构。

明天的计划如下：

. 解决上述问题
. 数据包处理函数中，实现类型检查和重校验。


.20131203

我今天的主要工作内容如下：

. `tcp_server` 可以监听端口了
. 用telnet连本机生成新连接时， `handle_accept()` 成功调用

明天的计划如下：

. 写 `tcp_connection` 中对连接的处理
. 首先解决login包（报文类型 `0x00` ）的接收和发送


.20131202

我今天的主要工作内容如下：

. 继续实现 `tcp_server` 和 `tcp_connection` 类
. 解决namespace冲突
. 将公用函数移到 `toolkit.[h|cpp]` 中

明天的计划如下：

. 继续写 `tcp_server` 逻辑 


.20131130

我今天的主要工作内容如下：

. 将我对数据库设计的需求改动整理成文，http://202.11.11.201/skyeye/skyeye-server/blob/master/doc/db_spec.asciidoc

明天的计划如下：

. 继续实现 `tcp_server` 和 `tcp_connection` 类 


.20131129

我今天的主要工作内容如下：

. 根据_显示屏无线监控系统_协议文档，确定 `tcp_server` 和 `tcp_connection` 类的功能划分
. 再读孙亚清的 _SkyEye数据库结构_ 文档，标注我的意见和新需求
. 读37Signals关于如何开发项目的书 _Getting Real_

明天的计划如下：

. 将我对数据库设计的需求改动整理成文


.20131128

我今天的主要工作内容如下：

. 写 `skyeye_server` 的CMakeList.txt。
  * 现在可以实现自动寻找MySQL C Connector以及Boost库的位置，添加对应的include path和lib path了。
  * 现在编译项目可以用常见的
+
[source,bash]
----
./configure
make
make install
----

明天的计划如下：

. 写 `tcp_server` 类的成员


.20131127

我今天的主要工作内容如下：

. 读孙亚清的Java通信代码
. 学习CMake的使用（server可以不用Qt，server GUI可以另写，借助数据库显示server状态。用qmake作为buildtool的话，安装server必须先装一个很大的Qt SDK；而CMake的预编译版本在大多数linux发行版的软件库里都有。）
. 整理此前写的全部文档

明天的计划如下：

. 将server的buildtool换成CMake
. 写 `tcp_server` 类的成员 


.20131126

我今天的主要工作内容如下：

. 给已经写好的cpp文件加注释。
. 生成代码文档。
. 开启MariaDB的general query log，供孙亚清调试展示程序使用。
. 生成孙亚清此前写的Java通信程序文档，结合文档与代码了解通信方法。

明天的计划如下：

. 继续读孙亚清的Java通信程序代码，搞懂如何与远端设备通信。
. 学习CMake的使用。


.20131125

我今天的主要工作内容如下：

. 把 `task_todo` 从 `vector` 改成 `map` 。这样添加和删除任务都用 `task_id` 作为key，写起来方便。
. 读到的任务，根据类型，分别调用不同的handler处理。
. handler返回处理结果后，将任务和结果写到 `task_done` 表，附上当前时间。将任务从 `task_todo` 表删除。
. 把之前用 `#define` 定义的常量改成 `const` 常量，以免类型不匹配。
. 把所有常量定义放到 `namespace skyeye` 中。
. 头文件加注释

遇到的问题如下：

. 现在所有任务的handler都是dummy，光打印自己做什么，实际上什么都不做。因为涉及到数据库操作，需要先把数据库的表和字段确定下来。

明天的计划如下：

. 参考展示代码和协议文档，研究如何与客户端通信。
. 写 `tcp_server` 和 `tcp_connection` 类的成员。


.20131123

我今天的主要工作内容如下：

. 实现从数据库读取 `task_todo` 表并存放在一个任务队列 `vector` 中。

明天的计划如下：

. 把任务队列中的项目逐一放到 `task_done` 表，并加上处理时间和默认结果。
. 对于特定的任务，比如请求客户端连接，把任务转发给另一个函数处理。将来在该函数中用modem发短信。


.20131122

. 在202.11.12.186上搭建NFS服务器。搭建过程和Windows连接方法见文档 http://202.11.11.201/skyeye/skyeye-server/blob/master/doc/nfs-setup.md
. 配合孙亚清，实现C++程序用Windows API访问NFS共享。
. 在qmake的项目文件中，调用系统命令 `mysql_config` 自动配置include path和lib path。
. 继续实现SkyEye-Server中的 `maria_db_operator` 类。


遇到的问题有：

. NFS服务启动之后，本地可以访问，Windows无法访问。
  - 防火墙开启了NFS的端口。将防火墙完全关闭后可以访问，所以一定有端口没开放。用 `rpcinfo -p` 查看用到的全部端口，一一打开后连接成功。
. Boost 库的include path和lib path仍然是事先写在项目文件中的，目前没有脚本来自动寻找它们的位置。


明天的计划如下：

. 实现自动（定时）查询数据库中的一张表 `task_todo` 是否有内容。
. 将 `tasks` 中的每一条记录显示后，放入 `task_done` 表。
. 把2中的“显示”换成 `tcp_server` 的 函数调用，并获取返回值，再放入 `task_done` 表。 


.20131121

我今天的主要工作内容如下：

. 参与讨论SkyEye的设计
. 写SkyEye Server的一部分类定义。 http://202.11.11.201/skyeye/skyeye-server/tree/master
. 脱离Qt的Databas Driver，使用MariaDB自己的C connector。在Fedora 19上，可以通过安装 `mariadb-devel` 包获得。

遇到的问题如下：

. 用于数据库操作的类成员函数的参数列表需要根据数据库的字段定义来写。
. 用于和客户端GUI互动的类成员函数参数需要我和孙亚清确定任务列表的必需属性。

明天的计划如下：

. 思考服务器程序的结构，还需要哪些类，类之间如何交换数据。
. 封装MariaDB的C API，实现读取状态操作。


.20131120

我今天的主要工作内容如下：

. 看boost.asio文档的tutorial
  - 看StackOverflow上的讨论说Qt Network的性能在连接数多的时候下降不少。所以推荐用boost.asio或者POCO库来做网络连接。
. 依照文档学习boost.asio的用法

写的代码在http://202.11.11.201/qingpei/learn-boost

明天的计划如下：

. 看完boost.asio的tutorial
. 了解怎样用boost.asio实现异步TCP通信
. 尝试实现异步TCP Server


.20131119

我今天的主要工作内容如下：

. Server端支持与多个Client通信。
. Qt的TCPServer会保持一个pendingConnections队列，可以用nextPendingConnection() 调出下一个连接进行处理。
  - 现在是一个TCPServer对象监听端口，每次有连接请求的时候，会发出signal，由预设的callback函数来处理请求。多个client的连接请求可以从上面提到的队列中逐一拿到。
  - 下一步我想把这个server放到新建的线程里去，不要跟GUI在一起，以免通信过程某个函数执行时间长了界面无响应。

明天的计划如下：

. 把Server的通信功能放到单独的线程去做。将来如果并发连接很多的话，再实现动态分配线程处理请求。
. 保持连接的时候Server和Client互相通信。


.20131118

我今天主要工作内容如下：

. 在周六连接上SQL数据库的基础上，把数据库和里面的表用TreeView显示在GUI上。
. 在TreeView中双击表，可以将表的内容用TableView显示出来。
. 输入SQL query之后，可以将执行结果用TableView显示。以上1-3的代码已经提交到 http://202.11.11.201/qingpei/qt-sql-example
. 查阅Qt文档的QNetwork部分。
. 实验QT中TCP Server和TCP Socket的用法。现在Server可以向Client发送String。

遇到的问题如下：

. 服务器的IP地址之前是自动分配的，我改成手动设置成 202.11.12.186 来固定，这可能会产生冲突。我的Windows机器之前的IP是 202.11.20.244 ，现在已经变成 202.11.20.150 了，此前邮件里发送的文档链接就失效了，每次分配到新的地址都需要改一次。

明天的计划如下：

. Server端实现连接池，管理多个客户端的TCP Socket。
. 测试C/S双向通信。


.20131116

我今天主要工作内容如下：

. 编译Qt的MySQL driver
. 写一个Qt程序连接MySQL数据库 项目在 http://202.11.11.201/qingpei/qt-sql-example
. 将Qt编程遇到的问题和解决办法写在 http://qingpei.me/sansi-book/skyeye.html#qt_programming

现在程序能够成功连接MySQL数据库，并显示数据库中的table名字列表。

遇到的问题和明天的计划如下：

. 连接数据库之后，在GUI上用treeview显示数据库的表结构，并用tableview显示表内容。
. 执行SQL query并把结果用tableview显示。


.20131115

我今天主要工作内容如下：

. 安装Qt
. Qt自带了一个IDE叫Qt Creator，有Design界面方便设计应用程序的窗口。
. Qt默认使用qmake，比GNU Make方便。所以昨天提到的Eclipse+autotools plugin的方案可以用Qt Creator+qmake取代。 
. 参照文档写了个简单的Qt程序。在 http://202.11.11.201/qingpei/qt-widget
  - 在服务器上新建了一个Group叫SkyEye，把Qt程序迁移到这个组了。
    - 组成员目前有三个：zhangqian, sunyaqing & qingpei
    - 三个组成员都有权限修改代码。
  - 现在这个项目的地址是 http://202.11.11.201/skyeye/qt-widget

遇到的问题和明天的计划如下：

. Qt Creator建的项目默认没有Makefile，我估计把相关信息全都写在一个xml格式的项目描述文件里了。需要查查怎么在不依赖Qt Creator的条件下，直接调用qmake来编译项目。
. 查文档，熟悉常用GUI元素如何使用C++操作。
  - 做一个Qt程序，接受SQL语句查询MariaDB，然后把查询结果在界面上显示出来。这样来了解一些控件的代码操作。


.20131114

我今天主要工作内容如下：

. 在 202.11.12.186 上搭建GitLab服务。
  * 服务器搭建过程以及用到的信息已经更新到如下文档 http://qingpei.me/sansi-book/skyeye.html#_programming_enviroment_setup_for_fedora
. 将gitlab做成系统服务，在系统启动之后自动开始运行服务。
. 查阅资料，了解如何使用gnu autotools给项目自动生成makefile。
. 建立一个helloworld项目，实现自动makefile。项目在 http://202.11.11.201/qingpei/makefile-example

遇到的问题和明天的计划如下：

. 无法发送系统通知邮件到@sansi.com的内网邮箱。
  * 目前用一个gmail账号发送系统邮件，可以发送到@sansitech.com的邮箱。
  * 非核心功能，不影响版本控制的使用，我想搁置这个问题。
  * 如果没有外网邮箱的话，也可以由admin账号新建用户，设好初始密码告诉用户。用户首次登陆的时候会被要求更改密码。之后就可以正常使用了。
  * 刚才给孙亚清建的用户已经能用了。
. 如果项目用到第三方库，现在还不会写configure.ac和Makefile.am。需要查一下。
. Eclipse有一个autotools plugin，可以自动化一部分操作，明天试一下。
. 学习用Qt写图形界面。


.20131113

我今天主要工作内容如下：

. 在 http://202.11.12.186/ 上用nginx架了个简单的http服务器，存放我写的文档。
. 与孙亚清将现有的mysql数据库各张表导入到mariadb里。
. 改客户端配置，连接到mariadb上的数据库，测试添加、删除操作，确认兼容性。
. 测试中发现昨天做的打开3306(mysql)端口的iptables配置，重启后会失效，重新查资料发现Fedora 17起，默认通过firewalld而非iptables服务管理端口。用firewall-cmd配置后，测试重启后端口成功处于开放状态。昨天的文档 http://202.11.20.244/server-setup-config.htm 已经更新了这部分。
. 安装GCC/G++和LLVM/Clang，并安装Eclipse作为Linux上的IDE。

遇到的问题和明天的计划如下：

. 在 202.11.12.186 上配置一个Git server，用于项目版本控制。
. 需要学习autoconf和automake等工具的使用，实现linux下工程的自动configure、生成makefile、编译安装。
. 写一个最简单的例子实现第1条提到的自动化流程。


.20131112

我今天主要工作内容如下：

. 安装Fedora、MariaDB
. 配置MariaDB的远程连接
. 配置phpMyAdmin，以便远程操作数据库
. 写相关文档 http://qingpei.me/sansi-book/skyeye.html#_%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE

服务器的基本信息如下：

- OS: Fedora 19.1 x86_64
- Server IP: 202.11.12.186
- Server MAC: `**`:`**`:`**`:`**`:`**`:`**`
- root password: `********`
- admin account: `********`
- mariadb root password: `********`

目前建了一个空数据库，授权一个管理员账号在局域网内访问：

- DB_NAME = skyeye_db
- USER_NAME = skyeye_admin
- REMOTE_IP = 202.11.%
- PASSWORD = `********`
- PERMISSIONS = ALL

可以通过Navicat等客户端来操作，也可访问 http://202.11.12.186/phpmyadmin/ 用管理员账号登陆操作。

明天的计划如下：

. 尝试如何把mysql的数据库导入到mariadb
. 检验mysql与mariadb的兼容性
. Fedora下准备C语言开发环境，安装基本的工具
